//
// Generated file, do not edit! Created by opp_msgtool 6.0 from NeighborInfo.msg.
//

#ifndef __NEIGHBORINFO_M_H
#define __NEIGHBORINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class NeighborInfo;
#include "Packet_m.h" // import Packet

/**
 * Class generated from <tt>NeighborInfo.msg:21</tt> by opp_msgtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet NeighborInfo extends Packet
 * {
 *     bool isNeighborInfo; // 0 if it's Packet but not NeighborInfo
 *     int gateIndex;
 *     int neighborName;
 * }
 * </pre>
 */
class NeighborInfo : public ::Packet
{
  protected:
    bool isNeighborInfo_ = false;
    int gateIndex = 0;
    int neighborName = 0;

  private:
    void copy(const NeighborInfo& other);

  protected:
    bool operator==(const NeighborInfo&) = delete;

  public:
    NeighborInfo(const char *name=nullptr, short kind=0);
    NeighborInfo(const NeighborInfo& other);
    virtual ~NeighborInfo();
    NeighborInfo& operator=(const NeighborInfo& other);
    virtual NeighborInfo *dup() const override {return new NeighborInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual bool isNeighborInfo() const;
    virtual void setIsNeighborInfo(bool isNeighborInfo);

    virtual int getGateIndex() const;
    virtual void setGateIndex(int gateIndex);

    virtual int getNeighborName() const;
    virtual void setNeighborName(int neighborName);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const NeighborInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, NeighborInfo& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline NeighborInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<NeighborInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __NEIGHBORINFO_M_H

